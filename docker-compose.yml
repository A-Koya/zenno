services:
  next:
    container_name: next
    build:
      context: .
      target: dev
      dockerfile: ./docker/next/Dockerfile
    volumes:
      - type: bind
        source: ./next
        target: /src
      - type: volume
        source: node_modules_v2
        target: /src/node_modules
    ports:
      - 3000:3000
      - 6006:6006
      - 3100:3100
    tty: true
    stdin_open: true
    env_file:
      - ./env/next/.env
    environment:
      - WATCHPACK_POLLING=true
      - TZ=Asia/Tokyo
  go:
    container_name: go
    build:
      context: .
      target: dev
      dockerfile: ./docker/go/Dockerfile
    volumes:
      - type: bind
        source: ./go
        target: /src
    ports:
      - 8080:8080
    tty: true
    stdin_open: true
    environment:
      - TZ=Asia/Tokyo
  postgres:
    image: postgres
    container_name: postgres
    ports:
      - 5432:5432
    environment:
      - POSTGRES_USER=root
      - POSTGRES_PASSWORD=password
    tty: true
    restart: always
    user: root
    volumes:
      - ./init:/docker-entrypoint-initdb.d
      - /etc/localtime:/etc/localtime:ro
  pgweb:
    image: sosedoff/pgweb
    container_name: pgweb
    ports:
      - "8081:8081"
    environment:
      - DATABASE_URL=postgres://root:password@postgres:5432/testdb?sslmode=disable
    links:
      - postgres:postgres
    restart: always
    depends_on:
      - postgres

volumes:
  node_modules_v2:


